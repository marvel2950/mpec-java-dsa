import java.util.*;

public class Main {
    public static void main(String[] args) {
        
        // Notations
        //Big-oh (O) Worst case
        //Omega  Best case
        //Theta Average case
        
        Scanner sc = new Scanner(System.in);
        
        int n = sc.nextInt();
        
        //O(1) -> constant
        // System.out.println("Hello Akarsh!");
        
        //O(n) -> Linear
        // for(int i=0;i<n;i++){
        //     System.out.println("Hello Akarsh!");
        // }
        
        //O(n^2) -> Quadratic
        // for(int i=0;i<n;i++){
        //     for(int j=0;j<n;j++){
        //         System.out.println("Hello Akarsh!");
        //     }
        // }
        
        // i*i<n == i<sqrt(n)
        //O(sqrt(n))
        // for(int i=0;i*i<n;i++){
        //     System.out.println("Hello Akarsh!");
        // }
        
        // for(int i=0;i<Math.sqrt(n);i++){
        //     System.out.println("Hello Akarsh!");
        // }
        
        //O(n*sqrt(n))
        // for(int i=0;i<n;i++){
        //     for(int j=0;j<Math.sqrt(n);j++){
        //         System.out.println("Hello Akarsh!");
        //     }
        // }
        
        //O(n)
        // int i = 0;
        // while(i<n){
        //     System.out.println("Hello Akarsh!");
        //     i++;
        // }
        
        
        //O(n**2)
        // for(int i=0;i<n;i++){
        //     for(int j=0;j<i;j++){
        //        System.out.println("Hello Akarsh!");         
        //     }
        // }
        
//         i   j
//         0   0
//         1   1
//         2   2
//         3   3
                
//         0+1+2+3 = n(n+1)/2 = (n**2+n)/2
        
        //O(n**2)
//         for(int i=0;i<n;i++){
//             System.out.println("Hello Akarsh!");
//         }
        
//         for(int i=0;i<n;i++){
//             for(int j=0;j<n;j++){
//                 System.out.println("Hello Akarsh!");
//             }
//         } 
        
        //O(1)
        // for(int i=0;i<n;i++){
        //     System.out.println("Hello Akarsh!");
        //     break;
        // }
        
        //O(n)
        // for(int j=0;j<n;j++){
        //     for(int i=0;i<n;i++){
        //         System.out.println("Hello Akarsh!");
        //         break;
        //     }
        // }
        
        //O(1)
        // for(int j=0;j<n;j++){
        //     for(int i=0;i<n;i++){
        //         System.out.println("Hello Akarsh!");
        //         break;
        //     }
        //     break;
        // }
        
        //O(1)
        // for(int i=0;i<n;i++){
        //     for(int j=0;j<i;j++){
        //        System.out.println("Hello Akarsh!");       
        //     }
        //     break;
        // }
        
        //O(1) == O(10) == O(1000) == O(0) => constant
        
        //O(1)
        // for(int i=0;i<n;i++){
        //     if(i==5)
        //         break;
        //     System.out.println("Hello Akarsh!");
        // }
        
        //O(n)
        // for(int j=0;j<n;j++){
        //    for(int i=0;i<n;i++){
        //         if(i==5)
        //             break;
        //         System.out.println("Hello Akarsh!");
        //     } 
        // }
        
        //O(n) == O(10n) == O(1000n) == O(0)
        
        //O(1)
        // for(int j=0;j<n;j++){
        //    for(int i=0;i<n;i++){
        //         if(i==5)
        //             break;
        //         System.out.println("Hello Akarsh!");
        //     } 
        //     break;
        // }
        
        //O(n)
        // for(int j=0;j<n;j++){
        //    for(int i=0;i<n;i++){
        //         if(i==5)
        //             break;
        //         System.out.println("Hello Akarsh!");
        //     }
        //     if(j==n*n)
        //         break;
        // }
        
        //O(n)
        // for(int i=0;i<n;i++){
        //     if(i==5)
        //         continue;
        //     System.out.println("Hello Akarsh!");
        // }
        
        //O(1)
        // for(int i=0;i<n;i++){
        //     if(i>=5)
        //         continue;
        //     System.out.println("Hello Akarsh!");
        // }
        
        // for(int i=1;i<=n;i=i*2){
        //     System.out.println(i+" Hello Akarsh!");
        // }
 
//Base 2        
// n = 64 -> 7 (log(64) = log(2^6) = 6*log(2) = 6)
// n = 32 -> 6
// n = 16 -> 5
// n = 8 -> 4 (log(8) = log(2^3) = 3*log(2) = 3)
    
// n -> logn+1
// Time -> O(logn)
        
        //O(nlogn)
        // for(int j=0;j<n;j++){
        //    for(int i=1;i<=n;i=i*2){
        //         System.out.println(i+" Hello Akarsh!");
        //     } 
        // }
        
        //O(logn)
        // for(int i=1;i<=n;i=i*3){
        //     System.out.println(i+" Hello Akarsh!");
        // }

//Base 3        
// n = 81 -> 5 (log(81) = log(3^4) = 4*log(3) = 4)
// n = 27 -> 4
// n = 9 -> 3
// n = 1 -> 1 
        
// n -> logn+1
// Time -> O(logn)
        
        //Not acceptable -> infinite loop
        // for(int i=0;i<n;i=i*3){
        //     for(int j=0;j<n;j=j*2){
        //         System.out.println("Akarsh");
        //     }
        // }
        
        // O(log3n*logn2)
        // for(int i=1;i<=n;i=i*3){
        //     for(int j=1;j<=n;j=j*2){
        //         System.out.println("Akarsh");
        //     }
        // }
        
        
        //O(n)+O(logn) = O(n)
//         for(int i=1;i<=n;i=i*2){
//             System.out.println("Akarsh");
//         }
        
//         for(int j=0;j<n;j++){
//             System.out.println("Akarsh");
//         }
        
        // O(n/4) = O(n)
        // for(int j=0;j<n;j=j+4){
        //         System.out.println("Akarsh");
        // }
        
        //O(n^2)
        // for(int i=0;i<n;i++){
        //     for(int j=0;j<n;j=j+4){
        //         System.out.println("Akarsh");
        //     }
        // }
        
        //Space complexity
        // any extra space allocated apart from input and output
        //Array, Hashmap, 2D array, String
        
        //Array reverse
        //Time -> O(n), Space -> O(n)
        
//         int[] arr = {2,5,6,7,1};
//         n = arr.length;
        
//         int[] revArr = new int[n];
        
//         for(int i=n-1;i>=0;i--){
//             revArr[n-i-1] = arr[i];
//             // System.out.println(arr[i]);
//         }
        
//         for(int i=0;i<n;i++){
//             System.out.println(revArr[i]);
//         }

// 1   arr[4]  revArr[0] => (4,0) => (i,n-i-1)
// 7   arr[3]  revArr[1] => (3,1) => (i,n-i-1)
// 6   arr[2]  revArr[2] => (2,2) => (i,n-i-1)
// 5   arr[1]  revArr[3] => (1,3) => (i,n-i-1)
// 2   arr[0]  revArr[4] => (0,4) => (i,n-i-1)
        
        // O(n^2)
        // for(int i=4;i<n;i=i+4){
        //     for(int j=6;j<n;j=j+6){
        //         System.out.println("Akarsh");
        //     }
        // }
        
        //O(n^2)
        // for(int i=0;i<n;i++){
        //     for(int j=0;j<i;j++){
        //         System.out.println("Akarsh");
        //     }
        // }

//         i   j
//         0   0
//         1   1
//         2   2
//         3   3
                
//         0+1+2+3 = n(n+1)/2 = (n**2+n)/2
            
            //O(n^2)
            // for(int i=0;i<n*n;i++){
            //     System.out.println("Akarsh");
            // }
            
            //O(n^6)
            // for(int i=0;i<n*n;i++){
            //     for(int j=0;j<i;j++){
            //        System.out.println("Akarsh"); 
            //     }
            // }

//n=2
//         i   j
//         0   0
//         1   2
//         2   4
//         3   9
                
//         0+1^2+2^2+3^3 --- [n^2 terms] = n(n+1)(2n+1)/6

            //O(n^3)
            // for(int i=0;i<n;i++){
            //     for(int j=0;j<i*i;j++){
            //        System.out.println("Akarsh"); 
            //     }
            // }

//n=4
//         i   j
//         0   0
//         1   1
//         2   4
//         3   9
                
//         0+1^2+2^2+3^3 --- [n terms] = n(n+1)(2n+1)/6
        
        //Not acceptable -> infinite loop
        // for(int i=1;i<=n;i=i*i){
        //     System.out.println("Akarsh");
        // }
        
        // 1 sec = 10^7 above it is TLE
        
        //Assumption 2^10 == 10^3
        
        //n = 10^3
        
        //O(nlogn)
        // =10^3*log(10^3)
        // =10^3*log(2^10)
        // =10^3*10*log2
        // =10^4
        
        //O(n(logn)^2)
        
        // =10^3*(log(10^3)^2)
        // =10^3*(log(2^10)^2)
        // =10^3*(10*log2)^2
        // =10^3*10^2
        // =10^5
        
        //(10^2)^2 = 10^4
            
        
    }
}